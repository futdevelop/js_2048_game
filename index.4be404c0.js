const t=new class{constructor(t=null){this.size=4,this.board=t||Array.from({length:this.size},()=>Array(this.size).fill(0)),this.score=0,this.status="idle",this.initializeBoard()}getScore(){return this.score}getState(){return this.board}getStatus(){return this.status}initializeBoard(t=!1){t&&(this.addRandomTile(),this.addRandomTile())}start(){console.log("start"),this.status="playing",this.initializeBoard(!0)}restart(){console.log("restart"),this.board=Array.from({length:this.size},()=>Array(this.size).fill(0)),this.score=0,this.status="idle",this.initializeBoard(!1)}moveUp(){this.makeMove(this.compressUp.bind(this))}moveDown(){this.makeMove(this.compressDown.bind(this))}moveRight(){this.makeMove(this.compressRight.bind(this))}moveLeft(){this.makeMove(this.compressLeft.bind(this))}makeMove(t){let e=JSON.stringify(this.board);t(),JSON.stringify(this.board)!==e&&(this.addRandomTile(),this.checkWin()?this.status="win":this.checkLose()&&(this.status="lose"))}addRandomTile(){let t=[];for(let e=0;e<this.size;e++)for(let s=0;s<this.size;s++)0===this.board[e][s]&&t.push([e,s]);if(t.length>0){let[e,s]=t[Math.floor(Math.random()*t.length)];this.board[e][s]=.9>Math.random()?2:4}}compressLeft(){for(let t=0;t<this.size;t++)this.board[t]=this.compressRow(this.board[t])}compressRight(){for(let t=0;t<this.size;t++)this.board[t]=this.compressRow([...this.board[t]].reverse()).reverse()}compressUp(){for(let t=0;t<this.size;t++){let e=this.board.map(e=>e[t]);this.compressRow(e).forEach((e,s)=>{this.board[s][t]=e})}}compressDown(){for(let t=0;t<this.size;t++){let e=this.board.map(e=>e[t]).reverse();this.compressRow(e).reverse().forEach((e,s)=>{this.board[s][t]=e})}}compressRow(t){let e=t.filter(t=>0!==t);for(let t=0;t<e.length-1;t++)e[t]===e[t+1]&&(e[t]*=2,this.score+=e[t],e[t+1]=0);return[...e.filter(t=>0!==t),...Array(this.size-e.filter(t=>0!==t).length).fill(0)]}checkWin(){return this.board.some(t=>t.includes(2048))}checkLose(){if(this.board.some(t=>t.includes(0)))return!1;for(let t=0;t<this.size;t++)for(let e=0;e<this.size;e++){let s=this.board[t][e];if(t>0&&s===this.board[t-1][e]||t<this.size-1&&s===this.board[t+1][e]||e>0&&s===this.board[t][e-1]||e<this.size-1&&s===this.board[t][e+1])return!1}return!0}};function e(){let e=t.getState();document.querySelectorAll(".field-cell").forEach((t,s)=>{let i=e[Math.floor(s/4)][s%4];t.textContent=0===i?"":i,t.className=`field-cell field-cell--${i}`}),document.querySelector(".game-score").textContent=t.getScore();let s=document.querySelector(".message-lose"),i=document.querySelector(".message-win"),r=document.querySelector(".message-start");s.classList.add("hidden"),i.classList.add("hidden"),r.classList.add("hidden"),"win"===t.getStatus()?i.classList.remove("hidden"):"lose"===t.getStatus()?s.classList.remove("hidden"):"idle"===t.getStatus()&&r.classList.remove("hidden"),function(){let e=document.querySelector(".button");"idle"===t.getStatus()?(e.textContent="Start",e.classList.add("start"),e.classList.remove("restart")):(e.textContent="Restart",e.classList.add("restart"),e.classList.remove("start"))}()}document.addEventListener("keydown",s=>{if("playing"===t.getStatus()){switch(s.key){case"ArrowLeft":t.moveLeft();break;case"ArrowRight":t.moveRight();break;case"ArrowUp":t.moveUp();break;case"ArrowDown":t.moveDown()}e()}}),document.querySelector(".button").addEventListener("click",()=>{"idle"===t.getStatus()?t.start():t.restart(),e()});
//# sourceMappingURL=index.4be404c0.js.map

!function(){function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,i=Array(e);r<e;r++)i[r]=t[r];return i}function e(e,r){if(e){if("string"==typeof e)return t(e,r);var i=Object.prototype.toString.call(e).slice(8,-1);if("Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i)return Array.from(i);if("Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i))return t(e,r)}}function r(r){return function(e){if(Array.isArray(e))return t(e)}(r)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(r)||e(r)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var i=new(function(){var t;function i(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;!function(t,e){if(!(t instanceof e))throw TypeError("Cannot call a class as a function")}(this,i),this.size=4,this.board=e||Array.from({length:this.size},function(){return Array(t.size).fill(0)}),this.score=0,this.status="idle",this.initializeBoard()}return t=[{key:"getScore",value:function(){return this.score}},{key:"getState",value:function(){return this.board}},{key:"getStatus",value:function(){return this.status}},{key:"initializeBoard",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];t&&(this.addRandomTile(),this.addRandomTile())}},{key:"start",value:function(){console.log("start"),this.status="playing",this.initializeBoard(!0)}},{key:"restart",value:function(){var t=this;console.log("restart"),this.board=Array.from({length:this.size},function(){return Array(t.size).fill(0)}),this.score=0,this.status="idle",this.initializeBoard(!1)}},{key:"moveUp",value:function(){this.makeMove(this.compressUp.bind(this))}},{key:"moveDown",value:function(){this.makeMove(this.compressDown.bind(this))}},{key:"moveRight",value:function(){this.makeMove(this.compressRight.bind(this))}},{key:"moveLeft",value:function(){this.makeMove(this.compressLeft.bind(this))}},{key:"makeMove",value:function(t){var e=JSON.stringify(this.board);t(),JSON.stringify(this.board)!==e&&(this.addRandomTile(),this.checkWin()?this.status="win":this.checkLose()&&(this.status="lose"))}},{key:"addRandomTile",value:function(){for(var t=[],r=0;r<this.size;r++)for(var i=0;i<this.size;i++)0===this.board[r][i]&&t.push([r,i]);if(t.length>0){var n,o=function(t){if(Array.isArray(t))return t}(n=t[Math.floor(Math.random()*t.length)])||function(t,e){var r,i,n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var o=[],s=!0,a=!1;try{for(n=n.call(t);!(s=(r=n.next()).done)&&(o.push(r.value),2!==o.length);s=!0);}catch(t){a=!0,i=t}finally{try{s||null==n.return||n.return()}finally{if(a)throw i}}return o}}(n,2)||e(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),s=o[0],a=o[1];this.board[s][a]=.9>Math.random()?2:4}}},{key:"compressLeft",value:function(){for(var t=0;t<this.size;t++)this.board[t]=this.compressRow(this.board[t])}},{key:"compressRight",value:function(){for(var t=0;t<this.size;t++)this.board[t]=this.compressRow(r(this.board[t]).reverse()).reverse()}},{key:"compressUp",value:function(){for(var t,e=function(e){var i=t.board.map(function(t){return t[e]});t.compressRow(i).forEach(function(t,i){r.board[i][e]=t})},r=this,i=0;i<this.size;i++)t=this,e(i)}},{key:"compressDown",value:function(){for(var t,e=function(e){var i=t.board.map(function(t){return t[e]}).reverse();t.compressRow(i).reverse().forEach(function(t,i){r.board[i][e]=t})},r=this,i=0;i<this.size;i++)t=this,e(i)}},{key:"compressRow",value:function(t){for(var e=t.filter(function(t){return 0!==t}),i=0;i<e.length-1;i++)e[i]===e[i+1]&&(e[i]*=2,this.score+=e[i],e[i+1]=0);return r(e.filter(function(t){return 0!==t})).concat(r(Array(this.size-e.filter(function(t){return 0!==t}).length).fill(0)))}},{key:"checkWin",value:function(){return this.board.some(function(t){return t.includes(2048)})}},{key:"checkLose",value:function(){if(this.board.some(function(t){return t.includes(0)}))return!1;for(var t=0;t<this.size;t++)for(var e=0;e<this.size;e++){var r=this.board[t][e];if(t>0&&r===this.board[t-1][e]||t<this.size-1&&r===this.board[t+1][e]||e>0&&r===this.board[t][e-1]||e<this.size-1&&r===this.board[t][e+1])return!1}return!0}}],function(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}(i.prototype,t),i}());function n(){var t,e=i.getState();document.querySelectorAll(".field-cell").forEach(function(t,r){var i=e[Math.floor(r/4)][r%4];t.textContent=0===i?"":i,t.className="field-cell field-cell--".concat(i)}),document.querySelector(".game-score").textContent=i.getScore();var r=document.querySelector(".message-lose"),n=document.querySelector(".message-win"),o=document.querySelector(".message-start");r.classList.add("hidden"),n.classList.add("hidden"),o.classList.add("hidden"),"win"===i.getStatus()?n.classList.remove("hidden"):"lose"===i.getStatus()?r.classList.remove("hidden"):"idle"===i.getStatus()&&o.classList.remove("hidden"),t=document.querySelector(".button"),"idle"===i.getStatus()?(t.textContent="Start",t.classList.add("start"),t.classList.remove("restart")):(t.textContent="Restart",t.classList.add("restart"),t.classList.remove("start"))}document.addEventListener("keydown",function(t){if("playing"===i.getStatus()){switch(t.key){case"ArrowLeft":i.moveLeft();break;case"ArrowRight":i.moveRight();break;case"ArrowUp":i.moveUp();break;case"ArrowDown":i.moveDown()}n()}}),document.querySelector(".button").addEventListener("click",function(){"idle"===i.getStatus()?i.start():i.restart(),n()})}();
//# sourceMappingURL=index.e270884c.js.map
